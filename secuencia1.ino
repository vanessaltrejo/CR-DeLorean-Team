#include <RGBmatrixPanel.h>

#define CLK  11
#define OE   9
#define LAT 10
#define A   A0
#define B   A1
#define C   A2
#define D   A3

RGBmatrixPanel matrix(A, B, C, D, CLK, LAT, OE, false, 64);

void setup() {

  matrix.begin();

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));

  delay(15000);

  //delorean
  matrix.drawPixel(3, 4, matrix.Color333(7, 7, 7));
  matrix.drawLine(3, 5, 3, 10, matrix.Color333(7, 7, 7));
  matrix.drawLine(4, 11, 4, 15, matrix.Color333(7, 7, 7));
  matrix.drawLine(3, 16, 3, 20, matrix.Color333(7, 7, 7));
  matrix.drawPixel(4, 21, matrix.Color333(7, 7, 7));
  matrix.drawPixel(5, 22, matrix.Color333(7, 7, 7));
  matrix.drawPixel(6, 22, matrix.Color333(7, 7, 7));
  matrix.drawPixel(7, 23, matrix.Color333(7, 7, 7));
  matrix.drawLine(8, 24, 10, 24, matrix.Color333(7, 7, 7));
  matrix.drawLine(10, 23, 10, 21, matrix.Color333(7, 7, 7));
  matrix.drawLine(11, 20, 11, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(11, 25, 11, 26, matrix.Color333(7, 7, 7));
  matrix.drawPixel(12, 27, matrix.Color333(7, 7, 7));
  matrix.drawPixel(12, 18, matrix.Color333(7, 7, 7));
  matrix.drawLine(13, 28, 16, 28, matrix.Color333(7, 7, 7));
  matrix.drawLine(13, 17, 16, 17, matrix.Color333(7, 7, 7));
  matrix.drawPixel(17, 27, matrix.Color333(7, 7, 7));
  matrix.drawPixel(17, 18, matrix.Color333(7, 7, 7));
  matrix.drawLine(18, 20, 18, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(18, 25, 18, 26, matrix.Color333(7, 7, 7));
  matrix.drawLine(19, 21, 19, 24, matrix.Color333(7, 7, 7));
  matrix.drawLine(20, 25, 44, 25, matrix.Color333(7, 7, 7));
  matrix.drawLine(4, 5, 8, 9, matrix.Color333(7, 7, 7));
  matrix.drawLine(9, 9, 13, 9, matrix.Color333(7, 7, 7));
  matrix.drawLine(14, 8, 18, 8, matrix.Color333(7, 7, 7));
  matrix.drawLine(19, 7, 35, 7, matrix.Color333(7, 7, 7));
  matrix.drawLine(36, 8, 37, 8, matrix.Color333(7, 7, 7));
  matrix.drawLine(38, 9, 39, 10, matrix.Color333(7, 7, 7));
  matrix.drawLine(40, 11, 41, 11, matrix.Color333(7, 7, 7));
  matrix.drawPixel(42, 12, matrix.Color333(7, 7, 7));
  matrix.drawLine(43, 13, 48, 13, matrix.Color333(7, 7, 7));
  matrix.drawLine(49, 14, 58, 14, matrix.Color333(7, 7, 7));
  matrix.drawLine(59, 15, 59, 16, matrix.Color333(7, 7, 7));
  matrix.drawLine(60, 17, 60, 20, matrix.Color333(7, 7, 7));
  matrix.drawLine(59, 21, 59, 22, matrix.Color333(7, 7, 7));
  matrix.drawLine(58, 23, 58, 24, matrix.Color333(7, 7, 7));
  matrix.drawLine(57, 25, 53, 25, matrix.Color333(7, 7, 7));
  matrix.drawLine(44, 24, 44, 21, matrix.Color333(7, 7, 7));
  matrix.drawLine(45, 20, 45, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(45, 25, 45, 26, matrix.Color333(7, 7, 7));
  matrix.drawPixel(46, 27, matrix.Color333(7, 7, 7));
  matrix.drawPixel(46, 18, matrix.Color333(7, 7, 7));
  matrix.drawLine(47, 28, 50, 28, matrix.Color333(7, 7, 7));
  matrix.drawLine(47, 17, 50, 17, matrix.Color333(7, 7, 7));
  matrix.drawPixel(51, 27, matrix.Color333(7, 7, 7));
  matrix.drawPixel(51, 18, matrix.Color333(7, 7, 7));
  matrix.drawLine(52, 20, 52, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(52, 25, 52, 26, matrix.Color333(7, 7, 7));
  matrix.drawLine(53, 21, 53, 24, matrix.Color333(7, 7, 7));

  delay(1800);

  // azul
  matrix.fillScreen(matrix.Color333(0, 0, 7));
  delay(300);
  // amarillo
  matrix.fillScreen(matrix.Color333(7, 7, 0));
  delay(300);
  // naranja
  matrix.fillScreen(matrix.Color333(6, 3, 1));
  delay(300);
  // azul
  matrix.fillScreen(matrix.Color333(0, 0, 7));
  delay(300);
  // amarillo
  matrix.fillScreen(matrix.Color333(7, 7, 0));
  delay(300);
  // naranja
  matrix.fillScreen(matrix.Color333(6, 3, 1));
  delay(300);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));

  // date
  matrix.drawLine(4, 8, 6, 8, matrix.Color333(0, 7, 0));
  matrix.drawLine(10, 8, 12, 8, matrix.Color333(0, 7, 0));
  matrix.drawLine(14, 8, 18, 8, matrix.Color333(0, 7, 0));
  matrix.drawLine(25, 8, 27, 8, matrix.Color333(0, 7, 0));
  matrix.drawLine(40, 8, 42, 8, matrix.Color333(0, 7, 0));
  matrix.drawLine(46, 8, 48, 8, matrix.Color333(0, 7, 0));
  matrix.drawLine(57, 8, 59, 8, matrix.Color333(0, 7, 0));
  matrix.drawLine(4, 20, 6, 20, matrix.Color333(0, 7, 0));
  matrix.drawLine(10, 20, 12, 20, matrix.Color333(0, 7, 0));
  matrix.drawLine(25, 20, 27, 20, matrix.Color333(0, 7, 0));
  matrix.drawLine(40, 20, 42, 20, matrix.Color333(0, 7, 0));
  matrix.drawLine(46, 20, 48, 20, matrix.Color333(0, 7, 0));
  matrix.drawLine(57, 20, 59, 20, matrix.Color333(0, 7, 0));
  matrix.drawLine(3, 9, 3, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(7, 9, 7, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(9, 9, 9, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(16, 9, 16, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(28, 9, 28, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(33, 9, 33, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(43, 9, 43, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(45, 9, 45, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(49, 9, 49, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(54, 9, 54, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(56, 9, 56, 13, matrix.Color333(0, 7, 0));
  matrix.drawLine(3, 15, 3, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(7, 15, 7, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(9, 15, 9, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(16, 15, 16, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(24, 15, 24, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(33, 15, 33, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(39, 15, 39, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(45, 15, 45, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(49, 15, 49, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(54, 15, 54, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(60, 15, 60, 19, matrix.Color333(0, 7, 0));
  matrix.drawLine(25, 14, 27, 14, matrix.Color333(0, 7, 0));
  matrix.drawLine(40, 14, 42, 14, matrix.Color333(0, 7, 0));
  matrix.drawLine(57, 14, 59, 14, matrix.Color333(0, 7, 0));
  
  delay(1800);

  // azul
  matrix.fillScreen(matrix.Color333(0, 0, 7));
  delay(300);
  // amarillo
  matrix.fillScreen(matrix.Color333(7, 7, 0));
  delay(300);
  // naranja
  matrix.fillScreen(matrix.Color333(6, 3, 1));
  delay(300);
  // azul
  matrix.fillScreen(matrix.Color333(0, 0, 7));
  delay(300);
  // amarillo
  matrix.fillScreen(matrix.Color333(7, 7, 0));
  delay(300);
  // naranja
  matrix.fillScreen(matrix.Color333(6, 3, 1));
  delay(300);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));

  //collage
  matrix.drawPixel(7, 6, matrix.Color333(7, 0, 0));
  matrix.drawPixel(8, 5, matrix.Color333(7, 0, 0));
  matrix.drawPixel(14, 5, matrix.Color333(7, 0, 0));
  matrix.drawPixel(15, 6, matrix.Color333(7, 0, 0));
  matrix.drawPixel(7, 12, matrix.Color333(7, 0, 0));
  matrix.drawPixel(8, 13, matrix.Color333(7, 0, 0));
  matrix.drawPixel(15, 12, matrix.Color333(7, 0, 0));
  matrix.drawPixel(14, 13, matrix.Color333(7, 0, 0));
  matrix.drawLine(9, 4, 13, 4, matrix.Color333(7, 0, 0));
  matrix.drawLine(9, 14, 13, 14, matrix.Color333(7, 0, 0));
  matrix.drawLine(6, 7, 6, 11, matrix.Color333(7, 0, 0));
  matrix.drawLine(16, 7, 16, 11, matrix.Color333(7, 0, 0));
  matrix.drawLine(9, 5, 13, 5, matrix.Color333(5, 5, 5));
  matrix.drawLine(8, 6, 14, 6, matrix.Color333(5, 5, 5));
  matrix.drawLine(7, 7, 15, 7, matrix.Color333(5, 5, 5));
  matrix.drawLine(7, 8, 15, 8, matrix.Color333(5, 5, 5));
  matrix.drawLine(7, 9, 15, 9, matrix.Color333(5, 5, 5));
  matrix.drawLine(7, 10, 15, 10, matrix.Color333(5, 5, 5));
  matrix.drawLine(7, 11, 15, 11, matrix.Color333(5, 5, 5));
  matrix.drawLine(8, 12, 14, 12, matrix.Color333(5, 5, 5));
  matrix.drawLine(9, 13, 13, 13, matrix.Color333(5, 5, 5));
  matrix.drawLine(8, 9, 11, 9, matrix.Color333(0, 0, 0));
  matrix.drawLine(11, 7, 11, 8, matrix.Color333(0, 0, 0));
  matrix.drawPixel(26, 16, matrix.Color333(0, 0, 7));
  matrix.drawLine(23, 17, 27, 17, matrix.Color333(0, 0, 4));
  matrix.drawLine(22, 18, 27, 18, matrix.Color333(0, 0, 4));
  matrix.drawLine(21, 19, 28, 19, matrix.Color333(0, 0, 4));
  matrix.drawLine(21, 20, 28, 20, matrix.Color333(0, 0, 4));
  matrix.drawLine(21, 21, 28, 21, matrix.Color333(0, 0, 4));
  matrix.drawLine(22, 22, 28, 22, matrix.Color333(0, 0, 4));
  matrix.drawLine(23, 23, 28, 23, matrix.Color333(0, 0, 4));
  matrix.drawLine(15, 24, 28, 24, matrix.Color333(0, 0, 4));
  matrix.drawLine(16, 25, 28, 25, matrix.Color333(0, 0, 4));
  matrix.drawLine(17, 26, 28, 26, matrix.Color333(0, 0, 4));
  matrix.drawLine(23, 18, 25, 18, matrix.Color333(0, 5, 7));
  matrix.drawLine(22, 19, 24, 19, matrix.Color333(0, 5, 7));
  matrix.drawLine(21, 20, 23, 20, matrix.Color333(0, 5, 7));
  matrix.drawLine(21, 21, 23, 21, matrix.Color333(0, 5, 7));
  matrix.drawLine(21, 22, 23, 22, matrix.Color333(0, 5, 7));
  matrix.drawLine(21, 23, 23, 23, matrix.Color333(0, 5, 7));
  matrix.drawLine(22, 24, 24, 24, matrix.Color333(0, 5, 7));
  matrix.drawLine(29, 17, 28, 18, matrix.Color333(1, 1, 1));
  matrix.drawLine(30, 18, 29, 19, matrix.Color333(1, 1, 1));
  matrix.drawLine(31, 19, 29, 21, matrix.Color333(1, 1, 1));
  matrix.drawLine(32, 20, 29, 23, matrix.Color333(1, 1, 1));
  matrix.drawLine(33, 21, 29, 25, matrix.Color333(1, 1, 1));
  matrix.drawLine(33, 23, 30, 26, matrix.Color333(1, 1, 1));
  matrix.drawPixel(28, 17, matrix.Color333(0, 5, 7));
  matrix.drawLine(30, 17, 29, 18, matrix.Color333(2, 6, 7));
  matrix.drawLine(31, 18, 29, 20, matrix.Color333(2, 6, 7));
  matrix.drawLine(32, 19, 29, 22, matrix.Color333(2, 6, 7));
  matrix.drawLine(33, 20, 29, 24, matrix.Color333(2, 6, 7));
  matrix.drawLine(33, 22, 29, 26, matrix.Color333(2, 6, 7));
  matrix.drawPixel(31, 26, matrix.Color333(0, 5, 7));
  matrix.drawLine(32, 25, 33, 25, matrix.Color333(0, 0, 4));
  matrix.drawLine(32, 26, 33, 26, matrix.Color333(0, 0, 4));
  matrix.drawLine(45, 4, 51, 4, matrix.Color333(0, 0, 3));
  matrix.drawLine(45, 5, 51, 5, matrix.Color333(0, 0, 3));
  matrix.drawLine(43, 6, 53, 6, matrix.Color333(0, 0, 3));
  matrix.drawLine(42, 7, 54, 7, matrix.Color333(0, 0, 3));
  matrix.drawLine(41, 8, 55, 8, matrix.Color333(0, 0, 3));
  matrix.drawLine(41, 9, 55, 9, matrix.Color333(0, 0, 3));
  matrix.drawLine(40, 10, 56, 10, matrix.Color333(0, 0, 3));
  matrix.drawLine(40, 11, 56, 11, matrix.Color333(0, 0, 3));
  matrix.drawLine(39, 12, 57, 12, matrix.Color333(0, 0, 3));
  matrix.drawLine(39, 13, 57, 13, matrix.Color333(0, 0, 3));
  matrix.drawLine(39, 14, 57, 14, matrix.Color333(0, 0, 3));
  matrix.drawLine(39, 15, 57, 15, matrix.Color333(0, 0, 3));
  matrix.drawLine(39, 16, 57, 16, matrix.Color333(0, 0, 3));
  matrix.drawLine(39, 17, 57, 17, matrix.Color333(0, 0, 3));
  matrix.drawLine(39, 18, 57, 18, matrix.Color333(0, 0, 3));
  matrix.drawLine(46, 5, 50, 5, matrix.Color333(0, 5, 7));
  matrix.drawLine(43, 7, 53, 7, matrix.Color333(0, 5, 7));
  matrix.drawLine(42, 8, 54, 8, matrix.Color333(0, 5, 7));
  matrix.drawLine(42, 9, 54, 9, matrix.Color333(0, 5, 7));
  matrix.drawLine(41, 10, 55, 10, matrix.Color333(0, 5, 7));
  matrix.drawLine(41, 11, 55, 11, matrix.Color333(0, 5, 7));
  matrix.drawLine(40, 12, 56, 12, matrix.Color333(0, 5, 7));
  matrix.drawLine(40, 13, 56, 13, matrix.Color333(0, 5, 7));
  matrix.drawLine(40, 14, 56, 14, matrix.Color333(0, 5, 7));
  matrix.drawLine(40, 15, 56, 15, matrix.Color333(0, 5, 7));
  matrix.drawLine(40, 16, 56, 16, matrix.Color333(0, 5, 7));
  matrix.drawLine(40, 17, 56, 17, matrix.Color333(0, 5, 7));
  matrix.drawLine(40, 18, 56, 18, matrix.Color333(0, 5, 7));
  matrix.drawPixel(47, 5, matrix.Color333(0, 0, 3));
  matrix.drawPixel(49, 5, matrix.Color333(0, 0, 3));
  matrix.drawLine(43, 13, 43, 18, matrix.Color333(0, 0, 3));
  matrix.drawLine(52, 13, 52, 18, matrix.Color333(0, 0, 3));
  matrix.drawLine(40, 19, 42, 19, matrix.Color333(0, 0, 3));
  matrix.drawLine(53, 19, 55, 19, matrix.Color333(0, 0, 3));
  matrix.drawLine(40, 20, 42, 20, matrix.Color333(0, 0, 3));
  matrix.drawLine(53, 20, 55, 20, matrix.Color333(0, 0, 3));
  matrix.drawPixel(55, 19, matrix.Color333(0, 5, 7));
  matrix.drawPixel(41, 19, matrix.Color333(0, 5, 7));
  matrix.drawLine(45, 6, 51, 6, matrix.Color333(4, 0, 0));
  matrix.drawLine(45, 7, 51, 7, matrix.Color333(4, 0, 0));
  matrix.drawLine(45, 8, 51, 8, matrix.Color333(4, 0, 0));
  matrix.drawLine(45, 9, 51, 9, matrix.Color333(4, 0, 0));
  matrix.drawLine(45, 10, 51, 10, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 11, 52, 11, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 12, 52, 12, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 13, 52, 13, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 14, 52, 14, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 15, 52, 15, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 16, 52, 16, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 17, 52, 17, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 18, 52, 18, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 19, 52, 19, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 20, 52, 20, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 21, 52, 21, matrix.Color333(4, 0, 0));
  matrix.drawLine(44, 22, 52, 22, matrix.Color333(4, 0, 0));
  matrix.drawLine(46, 7, 50, 7, matrix.Color333(5, 5, 0));
  matrix.drawLine(46, 8, 50, 8, matrix.Color333(5, 5, 0));
  matrix.drawLine(46, 9, 50, 9, matrix.Color333(5, 5, 0));
  matrix.drawLine(46, 10, 50, 10, matrix.Color333(5, 5, 0));
  matrix.drawLine(45, 12, 51, 12, matrix.Color333(5, 5, 0));
  matrix.drawLine(45, 13, 51, 13, matrix.Color333(5, 5, 0));
  matrix.drawLine(45, 15, 51, 15, matrix.Color333(5, 5, 0));
  matrix.drawLine(45, 16, 51, 16, matrix.Color333(5, 5, 0));
  matrix.drawLine(45, 18, 51, 18, matrix.Color333(5, 5, 0));
  matrix.drawLine(45, 19, 51, 19, matrix.Color333(5, 5, 0));
  matrix.drawLine(45, 21, 51, 21, matrix.Color333(5, 5, 0));
  matrix.drawLine(48, 9, 48, 21, matrix.Color333(4, 0, 0));
  matrix.drawLine(47, 7, 47, 9, matrix.Color333(4, 0, 0));
  matrix.drawLine(49, 7, 49, 9, matrix.Color333(4, 0, 0));
  matrix.drawLine(48, 7, 48, 8, matrix.Color333(7, 7, 0));

  delay(1800);

  // azul
  matrix.fillScreen(matrix.Color333(0, 0, 7));
  delay(300);
  // amarillo
  matrix.fillScreen(matrix.Color333(7, 7, 0));
  delay(300);
  // naranja
  matrix.fillScreen(matrix.Color333(6, 3, 1));
  delay(300);
  // azul
  matrix.fillScreen(matrix.Color333(0, 0, 7));
  delay(300);
  // amarillo
  matrix.fillScreen(matrix.Color333(7, 7, 0));
  delay(300);
  // naranja
  matrix.fillScreen(matrix.Color333(6, 3, 1));
  delay(300);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));

  // rayos
  matrix.drawLine(5, 16, 8, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 25, 15, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 5, 14, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(15, 5, 11, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(12, 14, 16, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(4, 17, 9, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(10, 17, 8, 26, matrix.Color333(7, 7, 0));
  delay(450);
  matrix.drawLine(5, 16, 8, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 25, 15, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 5, 14, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(15, 5, 11, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(12, 14, 16, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(4, 17, 9, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(10, 17, 8, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(19, 16, 22, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(23, 25, 29, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(23, 5, 28, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(29, 5, 25, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(26, 14, 30, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(18, 17, 23, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(24, 17, 22, 26, matrix.Color333(7, 7, 0));
  delay(450);
  matrix.drawLine(5, 16, 8, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 25, 15, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 5, 14, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(15, 5, 11, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(12, 14, 16, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(4, 17, 9, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(10, 17, 8, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(19, 16, 22, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(23, 25, 29, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(23, 5, 28, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(29, 5, 25, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(26, 14, 30, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(18, 17, 23, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(24, 17, 22, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(33, 16, 36, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(37, 25, 43, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(37, 5, 42, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(43, 5, 39, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(40, 14, 44, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 17, 37, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(38, 17, 36, 26, matrix.Color333(7, 7, 0));
  delay(450);
  matrix.drawLine(5, 16, 8, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 25, 15, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(9, 5, 14, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(15, 5, 11, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(12, 14, 16, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(4, 17, 9, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(10, 17, 8, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(19, 16, 22, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(23, 25, 29, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(23, 5, 28, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(29, 5, 25, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(26, 14, 30, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(18, 17, 23, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(24, 17, 22, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(33, 16, 36, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(37, 25, 43, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(37, 5, 42, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(43, 5, 39, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(40, 14, 44, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 17, 37, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(38, 17, 36, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(47, 16, 50, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(51, 25, 57, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(51, 5, 56, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(57, 5, 53, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(54, 14, 58, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(46, 17, 51, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(52, 17, 50, 26, matrix.Color333(7, 7, 0));
  delay(450);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));
  
  // azul
  matrix.drawLine(0, 0, 31, 0, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 1, 31, 1, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 2, 31, 2, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 3, 31, 3, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 4, 31, 4, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 5, 31, 5, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 6, 31, 6, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 7, 31, 7, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 8, 31, 8, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 9, 31, 9, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 10, 31, 10, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 11, 31, 11, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 12, 31, 12, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 13, 31, 13, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 14, 31, 14, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 15, 31, 15, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 16, 31, 16, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 17, 31, 17, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 18, 31, 18, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 19, 31, 19, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 20, 31, 20, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 21, 31, 21, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 22, 31, 22, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 23, 31, 23, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 24, 31, 24, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 25, 31, 25, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 26, 31, 26, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 27, 31, 27, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 28, 31, 28, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 29, 31, 29, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 30, 31, 30, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 31, 31, 31, matrix.Color333(0, 0, 7));
  delay(450);
  // amarillo
  matrix.drawLine(32, 0, 63, 0, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 1, 63, 1, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 2, 63, 2, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 3, 63, 3, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 4, 63, 4, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 5, 63, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 6, 63, 6, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 7, 63, 7, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 8, 63, 8, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 9, 63, 9, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 10, 63, 10, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 11, 63, 11, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 12, 63, 12, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 13, 63, 13, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 14, 63, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 15, 63, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 16, 63, 16, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 17, 63, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 18, 63, 18, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 19, 63, 19, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 20, 63, 20, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 21, 63, 21, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 22, 63, 22, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 23, 63, 23, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 24, 63, 24, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 25, 63, 25, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 26, 63, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 27, 63, 27, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 28, 63, 28, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 29, 63, 29, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 30, 63, 30, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 31, 63, 31, matrix.Color333(7, 7, 0));
  delay(450);
  // naranja
  matrix.drawLine(0, 0, 31, 0, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 1, 31, 1, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 2, 31, 2, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 3, 31, 3, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 4, 31, 4, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 5, 31, 5, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 6, 31, 6, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 7, 31, 7, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 8, 31, 8, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 9, 31, 9, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 10, 31, 10, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 11, 31, 11, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 12, 31, 12, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 13, 31, 13, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 14, 31, 14, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 15, 31, 15, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 16, 31, 16, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 17, 31, 17, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 18, 31, 18, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 19, 31, 19, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 20, 31, 20, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 21, 31, 21, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 22, 31, 22, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 23, 31, 23, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 24, 31, 24, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 25, 31, 25, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 26, 31, 26, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 27, 31, 27, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 28, 31, 28, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 29, 31, 29, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 30, 31, 30, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 31, 31, 31, matrix.Color333(6, 3, 1));
  delay(450);
  // rosa
  matrix.drawLine(32, 0, 63, 0, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 1, 63, 1, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 2, 63, 2, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 3, 63, 3, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 4, 63, 4, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 5, 63, 5, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 6, 63, 6, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 7, 63, 7, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 8, 63, 8, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 9, 63, 9, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 10, 63, 10, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 11, 63, 11, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 12, 63, 12, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 13, 63, 13, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 14, 63, 14, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 15, 63, 15, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 16, 63, 16, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 17, 63, 17, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 18, 63, 18, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 19, 63, 19, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 20, 63, 20, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 21, 63, 21, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 22, 63, 22, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 23, 63, 23, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 24, 63, 24, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 25, 63, 25, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 26, 63, 26, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 27, 63, 27, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 28, 63, 28, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 29, 63, 29, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 30, 63, 30, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 31, 63, 31, matrix.Color333(7, 0, 3));
  delay(450);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));

  //marti y doc
  matrix.drawLine(35, 10, 35, 15, matrix.Color333(2, 2, 2));
  matrix.drawLine(36, 11, 36, 15, matrix.Color333(2, 2, 2));
  matrix.drawLine(43, 11, 43, 15, matrix.Color333(2, 2, 2));
  matrix.drawLine(44, 11, 44, 15, matrix.Color333(2, 2, 2));
  matrix.drawPixel(38, 7, matrix.Color333(2, 2, 2));
  matrix.drawPixel(41, 7, matrix.Color333(2, 2, 2));
  matrix.drawPixel(37, 8, matrix.Color333(2, 2, 2));
  matrix.drawPixel(42, 8, matrix.Color333(2, 2, 2));
  matrix.drawPixel(36, 9, matrix.Color333(2, 2, 2));
  matrix.drawPixel(43, 9, matrix.Color333(2, 2, 2));
  matrix.drawLine(34, 17, 34, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(35, 16, 35, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(36, 16, 36, 17, matrix.Color333(7, 7, 7));
  matrix.drawLine(36, 21, 36, 22, matrix.Color333(7, 7, 7));
  matrix.drawLine(37, 16, 37, 22, matrix.Color333(7, 7, 7));
  matrix.drawLine(38, 16, 38, 22, matrix.Color333(7, 7, 7));
  matrix.drawLine(41, 16, 41, 22, matrix.Color333(7, 7, 7));
  matrix.drawLine(42, 16, 42, 22, matrix.Color333(7, 7, 7));
  matrix.drawLine(43, 21, 43, 22, matrix.Color333(7, 7, 7));
  matrix.drawLine(43, 16, 43, 17, matrix.Color333(7, 7, 7));
  matrix.drawLine(44, 16, 44, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(45, 17, 45, 19, matrix.Color333(7, 7, 7));
  matrix.drawLine(39, 16, 39, 21, matrix.Color333(0, 0, 7));
  matrix.drawLine(40, 16, 40, 21, matrix.Color333(0, 0, 7));
  matrix.drawLine(37, 9, 37, 14, matrix.Color333(7, 4, 2));
  matrix.drawLine(38, 8, 38, 11, matrix.Color333(7, 4, 2));
  matrix.drawLine(38, 14, 38, 15, matrix.Color333(7, 4, 2));
  matrix.drawLine(39, 7, 39, 15, matrix.Color333(7, 4, 2));
  matrix.drawLine(40, 7, 40, 15, matrix.Color333(7, 4, 2));
  matrix.drawLine(41, 14, 41, 15, matrix.Color333(7, 4, 2));
  matrix.drawLine(41, 8, 41, 11, matrix.Color333(7, 4, 2));
  matrix.drawLine(42, 9, 42, 14, matrix.Color333(7, 4, 2));
  matrix.drawLine(34, 20, 35, 20, matrix.Color333(7, 4, 2));
  matrix.drawLine(44, 20, 45, 20, matrix.Color333(7, 4, 2));
  matrix.drawLine(37, 23, 37, 25, matrix.Color333(1, 1, 1));
  matrix.drawLine(38, 23, 38, 25, matrix.Color333(1, 1, 1));
  matrix.drawLine(39, 22, 39, 23, matrix.Color333(1, 1, 1));
  matrix.drawLine(40, 22, 40, 23, matrix.Color333(1, 1, 1));
  matrix.drawLine(41, 23, 41, 25, matrix.Color333(1, 1, 1));
  matrix.drawLine(42, 23, 42, 25, matrix.Color333(1, 1, 1));
  matrix.drawLine(37, 26, 37, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(38, 26, 38, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(41, 26, 41, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(42, 26, 42, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(20, 26, 20, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(21, 26, 21, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(24, 26, 24, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(25, 26, 25, 27, matrix.Color333(2, 1, 0));
  matrix.drawLine(20, 22, 20, 25, matrix.Color333(0, 0, 7));
  matrix.drawLine(21, 16, 21, 25, matrix.Color333(0, 0, 7));
  matrix.drawLine(22, 22, 22, 23, matrix.Color333(0, 0, 7));
  matrix.drawLine(23, 22, 23, 23, matrix.Color333(0, 0, 7));
  matrix.drawLine(24, 16, 24, 25, matrix.Color333(0, 0, 7));
  matrix.drawLine(25, 22, 25, 25, matrix.Color333(0, 0, 7));
  matrix.drawLine(17, 20, 18, 20, matrix.Color333(7, 4, 2));
  matrix.drawLine(27, 20, 28, 20, matrix.Color333(7, 4, 2));
  matrix.drawLine(22, 16, 22, 21, matrix.Color333(2, 5, 5));
  matrix.drawLine(23, 16, 23, 21, matrix.Color333(2, 5, 5));
  matrix.drawLine(17, 17, 17, 19, matrix.Color333(0, 0, 7));
  matrix.drawLine(18, 16, 18, 19, matrix.Color333(0, 0, 7));
  matrix.drawLine(27, 16, 27, 19, matrix.Color333(0, 0, 7));
  matrix.drawLine(28, 17, 28, 19, matrix.Color333(0, 0, 7));
  matrix.drawLine(19, 16, 19, 21, matrix.Color333(7, 0, 0));
  matrix.drawLine(20, 16, 20, 21, matrix.Color333(7, 0, 0));
  matrix.drawLine(25, 16, 25, 21, matrix.Color333(7, 0, 0));
  matrix.drawLine(26, 16, 26, 21, matrix.Color333(7, 0, 0));
  matrix.drawLine(21, 7, 24, 7, matrix.Color333(2, 1, 0));
  matrix.drawLine(20, 8, 25, 8, matrix.Color333(2, 1, 0));
  matrix.drawLine(19, 9, 26, 9, matrix.Color333(2, 1, 0));
  matrix.drawLine(19, 10, 20, 10, matrix.Color333(2, 1, 0));
  matrix.drawLine(23, 10, 26, 10, matrix.Color333(2, 1, 0));
  matrix.drawPixel(19, 11, matrix.Color333(2, 1, 0));
  matrix.drawPixel(26, 11, matrix.Color333(2, 1, 0));
  matrix.drawLine(21, 10, 22, 10, matrix.Color333(7, 4, 2));
  matrix.drawLine(20, 11, 25, 11, matrix.Color333(7, 4, 2));
  matrix.drawLine(19, 12, 20, 12, matrix.Color333(7, 4, 2));
  matrix.drawLine(22, 12, 23, 12, matrix.Color333(7, 4, 2));
  matrix.drawLine(25, 12, 26, 12, matrix.Color333(7, 4, 2));
  matrix.drawLine(19, 13, 20, 13, matrix.Color333(7, 4, 2));
  matrix.drawLine(22, 13, 23, 13, matrix.Color333(7, 4, 2));
  matrix.drawLine(25, 13, 26, 13, matrix.Color333(7, 4, 2));
  matrix.drawLine(20, 14, 25, 14, matrix.Color333(7, 4, 2));
  matrix.drawLine(21, 15, 24, 15, matrix.Color333(7, 4, 2));
  
  delay(1800);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));
  
  // azul
  matrix.drawLine(0, 0, 31, 0, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 1, 31, 1, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 2, 31, 2, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 3, 31, 3, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 4, 31, 4, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 5, 31, 5, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 6, 31, 6, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 7, 31, 7, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 8, 31, 8, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 9, 31, 9, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 10, 31, 10, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 11, 31, 11, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 12, 31, 12, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 13, 31, 13, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 14, 31, 14, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 15, 31, 15, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 16, 31, 16, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 17, 31, 17, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 18, 31, 18, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 19, 31, 19, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 20, 31, 20, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 21, 31, 21, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 22, 31, 22, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 23, 31, 23, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 24, 31, 24, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 25, 31, 25, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 26, 31, 26, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 27, 31, 27, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 28, 31, 28, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 29, 31, 29, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 30, 31, 30, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 31, 31, 31, matrix.Color333(0, 0, 7));
  delay(450);
  // amarillo
  matrix.drawLine(32, 0, 63, 0, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 1, 63, 1, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 2, 63, 2, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 3, 63, 3, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 4, 63, 4, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 5, 63, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 6, 63, 6, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 7, 63, 7, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 8, 63, 8, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 9, 63, 9, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 10, 63, 10, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 11, 63, 11, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 12, 63, 12, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 13, 63, 13, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 14, 63, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 15, 63, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 16, 63, 16, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 17, 63, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 18, 63, 18, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 19, 63, 19, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 20, 63, 20, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 21, 63, 21, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 22, 63, 22, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 23, 63, 23, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 24, 63, 24, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 25, 63, 25, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 26, 63, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 27, 63, 27, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 28, 63, 28, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 29, 63, 29, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 30, 63, 30, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 31, 63, 31, matrix.Color333(7, 7, 0));
  delay(450);
  // naranja
  matrix.drawLine(0, 0, 31, 0, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 1, 31, 1, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 2, 31, 2, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 3, 31, 3, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 4, 31, 4, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 5, 31, 5, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 6, 31, 6, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 7, 31, 7, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 8, 31, 8, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 9, 31, 9, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 10, 31, 10, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 11, 31, 11, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 12, 31, 12, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 13, 31, 13, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 14, 31, 14, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 15, 31, 15, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 16, 31, 16, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 17, 31, 17, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 18, 31, 18, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 19, 31, 19, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 20, 31, 20, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 21, 31, 21, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 22, 31, 22, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 23, 31, 23, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 24, 31, 24, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 25, 31, 25, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 26, 31, 26, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 27, 31, 27, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 28, 31, 28, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 29, 31, 29, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 30, 31, 30, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 31, 31, 31, matrix.Color333(6, 3, 1));
  delay(450);
  // rosa
  matrix.drawLine(32, 0, 63, 0, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 1, 63, 1, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 2, 63, 2, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 3, 63, 3, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 4, 63, 4, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 5, 63, 5, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 6, 63, 6, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 7, 63, 7, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 8, 63, 8, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 9, 63, 9, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 10, 63, 10, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 11, 63, 11, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 12, 63, 12, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 13, 63, 13, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 14, 63, 14, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 15, 63, 15, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 16, 63, 16, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 17, 63, 17, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 18, 63, 18, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 19, 63, 19, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 20, 63, 20, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 21, 63, 21, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 22, 63, 22, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 23, 63, 23, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 24, 63, 24, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 25, 63, 25, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 26, 63, 26, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 27, 63, 27, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 28, 63, 28, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 29, 63, 29, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 30, 63, 30, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 31, 63, 31, matrix.Color333(7, 0, 3));
  delay(450);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));

  //hoverboard
  matrix.drawLine(8, 14, 17, 14, matrix.Color333(7, 0, 3));
  matrix.drawLine(7, 15, 13, 15, matrix.Color333(7, 0, 3));
  matrix.drawLine(7, 16, 12, 16, matrix.Color333(7, 0, 3));
  matrix.drawLine(7, 17, 11, 17, matrix.Color333(7, 0, 3));
  matrix.drawLine(7, 18, 11, 18, matrix.Color333(7, 0, 3));
  matrix.drawLine(7, 19, 11, 19, matrix.Color333(7, 0, 3));
  matrix.drawLine(7, 20, 11, 20, matrix.Color333(7, 0, 3));
  matrix.drawLine(7, 21, 11, 21, matrix.Color333(7, 0, 3));
  matrix.drawLine(8, 22, 12, 22, matrix.Color333(7, 0, 3));
  matrix.drawLine(9, 23, 13, 23, matrix.Color333(7, 0, 3));
  matrix.drawLine(11, 24, 14, 24, matrix.Color333(7, 0, 3));
  matrix.drawLine(45, 9, 56, 9, matrix.Color333(7, 0, 3));
  matrix.drawLine(38, 10, 45, 10, matrix.Color333(7, 0, 3));
  matrix.drawLine(29, 11, 38, 11, matrix.Color333(7, 0, 3));
  matrix.drawLine(22, 12, 37, 12, matrix.Color333(7, 0, 3));
  matrix.drawLine(15, 13, 22, 13, matrix.Color333(7, 0, 3));
  matrix.drawLine(27, 13, 36, 13, matrix.Color333(7, 0, 3));
  matrix.drawLine(27, 14, 35, 14, matrix.Color333(7, 0, 3));
  matrix.drawLine(27, 15, 34, 15, matrix.Color333(7, 0, 3));
  matrix.drawLine(27, 16, 31, 16, matrix.Color333(7, 0, 3));
  matrix.drawLine(29, 21, 30, 21, matrix.Color333(7, 0, 3));
  matrix.drawLine(27, 22, 29, 22, matrix.Color333(7, 0, 3));
  matrix.drawLine(27, 23, 28, 23, matrix.Color333(7, 0, 3));
  matrix.drawLine(52, 10, 57, 10, matrix.Color333(7, 0, 3));
  matrix.drawLine(51, 11, 57, 11, matrix.Color333(7, 0, 3));
  matrix.drawLine(50, 12, 57, 12, matrix.Color333(7, 0, 3));
  matrix.drawLine(51, 13, 57, 13, matrix.Color333(7, 0, 3));
  matrix.drawLine(51, 14, 57, 14, matrix.Color333(7, 0, 3));
  matrix.drawLine(52, 15, 57, 15, matrix.Color333(7, 0, 3));
  matrix.drawLine(52, 16, 57, 16, matrix.Color333(7, 0, 3));
  matrix.drawLine(52, 17, 56, 17, matrix.Color333(7, 0, 3));
  matrix.drawLine(51, 18, 56, 18, matrix.Color333(7, 0, 3));
  matrix.drawLine(51, 19, 55, 19, matrix.Color333(7, 0, 3));
  matrix.drawLine(50, 20, 54, 20, matrix.Color333(7, 0, 3));
  matrix.drawLine(49, 21, 52, 21, matrix.Color333(7, 0, 3));
  matrix.drawLine(40, 21, 41, 21, matrix.Color333(7, 0, 3));
  matrix.drawLine(23, 13, 26, 13, matrix.Color333(7, 0, 0));
  matrix.drawLine(23, 14, 26, 14, matrix.Color333(7, 0, 0));
  matrix.drawLine(23, 15, 26, 15, matrix.Color333(7, 0, 0));
  matrix.drawLine(23, 16, 26, 16, matrix.Color333(7, 0, 0));
  matrix.drawLine(24, 22, 26, 22, matrix.Color333(7, 0, 0));
  matrix.drawLine(23, 23, 26, 23, matrix.Color333(7, 0, 0));
  matrix.drawLine(39, 11, 43, 11, matrix.Color333(7, 0, 0));
  matrix.drawLine(38, 12, 42, 12, matrix.Color333(7, 0, 0));
  matrix.drawLine(37, 13, 41, 13, matrix.Color333(7, 0, 0));
  matrix.drawLine(36, 14, 40, 14, matrix.Color333(7, 0, 0));
  matrix.drawLine(35, 15, 39, 15, matrix.Color333(7, 0, 0));
  matrix.drawLine(31, 21, 34, 21, matrix.Color333(7, 0, 0));
  matrix.drawLine(30, 22, 33, 22, matrix.Color333(7, 0, 0));
  matrix.drawLine(29, 23, 32, 23, matrix.Color333(7, 0, 0));
  matrix.drawLine(18, 14, 22, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(21, 15, 22, 15, matrix.Color333(7, 7, 0));
  matrix.drawPixel(22, 16, matrix.Color333(7, 7, 0));
  matrix.drawLine(46, 10, 51, 10, matrix.Color333(7, 7, 0));
  matrix.drawLine(44, 11, 50, 11, matrix.Color333(7, 7, 0));
  matrix.drawLine(43, 12, 44, 12, matrix.Color333(7, 7, 0));
  matrix.drawLine(37, 20, 40, 20, matrix.Color333(7, 7, 0));
  matrix.drawLine(35, 21, 39, 21, matrix.Color333(7, 7, 0));
  matrix.drawLine(34, 22, 38, 22, matrix.Color333(7, 7, 0));
  matrix.drawLine(15, 17, 19, 17, matrix.Color333(0, 5, 5));
  matrix.drawLine(14, 18, 20, 18, matrix.Color333(0, 5, 5));
  matrix.drawLine(14, 19, 21, 19, matrix.Color333(0, 5, 5));
  matrix.drawLine(14, 20, 21, 20, matrix.Color333(0, 5, 5));
  matrix.drawLine(15, 21, 20, 21, matrix.Color333(0, 5, 5));
  matrix.drawLine(44, 14, 48, 14, matrix.Color333(0, 5, 5));
  matrix.drawLine(43, 15, 49, 15, matrix.Color333(0, 5, 5));
  matrix.drawLine(42, 16, 49, 16, matrix.Color333(0, 5, 5));
  matrix.drawLine(42, 17, 49, 17, matrix.Color333(0, 5, 5));
  matrix.drawLine(42, 18, 49, 18, matrix.Color333(0, 5, 5));
  matrix.drawLine(43, 19, 48, 19, matrix.Color333(0, 5, 5));
  matrix.drawLine(14, 22, 21, 22, matrix.Color333(0, 2, 7));
  matrix.drawLine(15, 23, 21, 23, matrix.Color333(0, 2, 7));
  matrix.drawLine(16, 24, 20, 24, matrix.Color333(0, 2, 7));
  matrix.drawPixel(14, 21, matrix.Color333(0, 2, 7));
  matrix.drawPixel(21, 21, matrix.Color333(0, 2, 7));
  matrix.drawPixel(42, 19, matrix.Color333(0, 2, 7));
  matrix.drawPixel(49, 19, matrix.Color333(0, 2, 7));
  matrix.drawLine(42, 20, 48, 20, matrix.Color333(0, 2, 7));
  matrix.drawLine(43, 21, 48, 21, matrix.Color333(0, 2, 7));
  matrix.drawLine(12, 17, 12, 21, matrix.Color333(1, 0, 0));
  matrix.drawLine(13, 16, 13, 22, matrix.Color333(1, 0, 0));
  matrix.drawLine(14, 15, 20, 15, matrix.Color333(1, 0, 0));
  matrix.drawLine(14, 16, 21, 16, matrix.Color333(1, 0, 0));
  matrix.drawLine(22, 22, 23, 22, matrix.Color333(1, 0, 0));
  matrix.drawPixel(14, 23, matrix.Color333(1, 0, 0));
  matrix.drawPixel(15, 24, matrix.Color333(1, 0, 0));
  matrix.drawPixel(21, 24, matrix.Color333(1, 0, 0));
  matrix.drawPixel(22, 23, matrix.Color333(1, 0, 0));
  matrix.drawPixel(14, 17, matrix.Color333(1, 0, 0));
  matrix.drawLine(20, 17, 41, 17, matrix.Color333(1, 0, 0));
  matrix.drawLine(32, 16, 41, 16, matrix.Color333(1, 0, 0));
  matrix.drawLine(21, 18, 41, 18, matrix.Color333(1, 0, 0));
  matrix.drawLine(22, 19, 41, 19, matrix.Color333(1, 0, 0));
  matrix.drawLine(22, 20, 36, 20, matrix.Color333(1, 0, 0));
  matrix.drawLine(22, 21, 36, 21, matrix.Color333(1, 0, 0));
  matrix.drawLine(40, 15, 42, 15, matrix.Color333(1, 0, 0));
  matrix.drawLine(41, 14, 43, 14, matrix.Color333(1, 0, 0));
  matrix.drawLine(42, 13, 50, 13, matrix.Color333(1, 0, 0));
  matrix.drawLine(45, 12, 49, 12, matrix.Color333(1, 0, 0));
  matrix.drawLine(49, 14, 50, 14, matrix.Color333(1, 0, 0));
  matrix.drawLine(50, 15, 51, 15, matrix.Color333(1, 0, 0));
  matrix.drawLine(50, 16, 51, 16, matrix.Color333(1, 0, 0));
  matrix.drawLine(50, 17, 51, 17, matrix.Color333(1, 0, 0));
  matrix.drawLine(50, 18, 50, 18, matrix.Color333(1, 0, 0));
  matrix.drawPixel(41, 20, matrix.Color333(1, 0, 0));
  matrix.drawPixel(49, 20, matrix.Color333(1, 0, 0));
  matrix.drawPixel(42, 21, matrix.Color333(1, 0, 0));

  delay(1800);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));
  
  // azul
  matrix.drawLine(0, 0, 31, 0, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 1, 31, 1, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 2, 31, 2, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 3, 31, 3, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 4, 31, 4, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 5, 31, 5, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 6, 31, 6, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 7, 31, 7, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 8, 31, 8, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 9, 31, 9, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 10, 31, 10, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 11, 31, 11, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 12, 31, 12, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 13, 31, 13, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 14, 31, 14, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 15, 31, 15, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 16, 31, 16, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 17, 31, 17, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 18, 31, 18, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 19, 31, 19, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 20, 31, 20, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 21, 31, 21, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 22, 31, 22, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 23, 31, 23, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 24, 31, 24, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 25, 31, 25, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 26, 31, 26, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 27, 31, 27, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 28, 31, 28, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 29, 31, 29, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 30, 31, 30, matrix.Color333(0, 0, 7));
  matrix.drawLine(0, 31, 31, 31, matrix.Color333(0, 0, 7));
  delay(450);
  // amarillo
  matrix.drawLine(32, 0, 63, 0, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 1, 63, 1, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 2, 63, 2, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 3, 63, 3, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 4, 63, 4, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 5, 63, 5, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 6, 63, 6, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 7, 63, 7, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 8, 63, 8, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 9, 63, 9, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 10, 63, 10, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 11, 63, 11, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 12, 63, 12, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 13, 63, 13, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 14, 63, 14, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 15, 63, 15, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 16, 63, 16, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 17, 63, 17, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 18, 63, 18, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 19, 63, 19, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 20, 63, 20, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 21, 63, 21, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 22, 63, 22, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 23, 63, 23, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 24, 63, 24, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 25, 63, 25, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 26, 63, 26, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 27, 63, 27, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 28, 63, 28, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 29, 63, 29, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 30, 63, 30, matrix.Color333(7, 7, 0));
  matrix.drawLine(32, 31, 63, 31, matrix.Color333(7, 7, 0));
  delay(450);
  // naranja
  matrix.drawLine(0, 0, 31, 0, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 1, 31, 1, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 2, 31, 2, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 3, 31, 3, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 4, 31, 4, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 5, 31, 5, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 6, 31, 6, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 7, 31, 7, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 8, 31, 8, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 9, 31, 9, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 10, 31, 10, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 11, 31, 11, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 12, 31, 12, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 13, 31, 13, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 14, 31, 14, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 15, 31, 15, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 16, 31, 16, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 17, 31, 17, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 18, 31, 18, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 19, 31, 19, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 20, 31, 20, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 21, 31, 21, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 22, 31, 22, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 23, 31, 23, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 24, 31, 24, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 25, 31, 25, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 26, 31, 26, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 27, 31, 27, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 28, 31, 28, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 29, 31, 29, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 30, 31, 30, matrix.Color333(6, 3, 1));
  matrix.drawLine(0, 31, 31, 31, matrix.Color333(6, 3, 1));
  delay(450);
  // rosa
  matrix.drawLine(32, 0, 63, 0, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 1, 63, 1, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 2, 63, 2, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 3, 63, 3, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 4, 63, 4, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 5, 63, 5, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 6, 63, 6, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 7, 63, 7, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 8, 63, 8, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 9, 63, 9, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 10, 63, 10, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 11, 63, 11, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 12, 63, 12, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 13, 63, 13, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 14, 63, 14, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 15, 63, 15, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 16, 63, 16, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 17, 63, 17, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 18, 63, 18, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 19, 63, 19, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 20, 63, 20, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 21, 63, 21, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 22, 63, 22, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 23, 63, 23, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 24, 63, 24, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 25, 63, 25, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 26, 63, 26, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 27, 63, 27, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 28, 63, 28, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 29, 63, 29, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 30, 63, 30, matrix.Color333(7, 0, 3));
  matrix.drawLine(32, 31, 63, 31, matrix.Color333(7, 0, 3));
  delay(450);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));
}

void loop() {
  // Do nothing -- image doesn't change
}